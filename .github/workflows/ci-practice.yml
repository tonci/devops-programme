name: Practice CI
run-name: ${{ github.actor }} is doing very important work ðŸš€
on: [push]
jobs:
  editorconfig:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable
        with:
          args: --check ./app

#  Pylint:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#      - uses: actions/setup-python@v1
#      - run: pip install pylint -r requirements.txt
#      - run: pylint **/*.py

  MarkdownLint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run Markdown Lint
        uses: actionshub/markdownlint@main

  PyTest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pip install pytest
          pytest

  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Build and push Docker image to dockerhub
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get short SHA
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          push: true
#          tags: tonci123/devops-programme:${{ env.SHORT_SHA }}

      - name: Build but not push
        uses: docker/build-push-action@v5
        with:
          push: false
          tags: tonci123/devops-programme:${{ env.SHORT_SHA }}
          load: true  # Load the built image into Docker daemon

# I would rather scan this on cron (E.G. every day) and alert on a channel, then fail the build.
# for reference: https://github.com/aquasecurity/trivy-action
      - name: Scan the image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'tonci123/devops-programme:${{ env.SHORT_SHA }}'
          format: 'table'
          exit-code: '1'  # Fail step if vulnerabilities are found
          ignore-unfixed: true
          severity: 'CRITICAL'

      - name: Push the image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: tonci123/devops-programme:${{ env.SHORT_SHA }}

#  sonarcloud:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          # Disabling shallow clone is recommended for improving relevancy of reporting
#          fetch-depth: 0
#      - name: SonarCloud Scan
#        uses: sonarsource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}